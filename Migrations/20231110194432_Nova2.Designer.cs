// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Context;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231110194432_Nova2")]
    partial class Nova2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("WebApplication1.Models.Bebidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Preço")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("WebApplication1.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LoginId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebApplication1.Models.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusDaEntrega")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("WebApplication1.Models.Lanches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Preço")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lanches");
                });

            modelBuilder.Entity("WebApplication1.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("WebApplication1.Models.PedidoBebida", b =>
                {
                    b.Property<int>("BebidasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendaId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BebidasId");

                    b.HasIndex("VendaId");

                    b.ToTable("PedidosBebidas");
                });

            modelBuilder.Entity("WebApplication1.Models.PedidoLanche", b =>
                {
                    b.Property<int>("LanchesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendaId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("LanchesId");

                    b.HasIndex("VendaId");

                    b.ToTable("PedidosLanches");
                });

            modelBuilder.Entity("WebApplication1.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntregaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValorTotal")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EntregaId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("WebApplication1.Models.Cliente", b =>
                {
                    b.HasOne("WebApplication1.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("WebApplication1.Models.PedidoBebida", b =>
                {
                    b.HasOne("WebApplication1.Models.Bebidas", "Bebidas")
                        .WithMany()
                        .HasForeignKey("BebidasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebidas");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WebApplication1.Models.PedidoLanche", b =>
                {
                    b.HasOne("WebApplication1.Models.Lanches", "Lanches")
                        .WithMany()
                        .HasForeignKey("LanchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lanches");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WebApplication1.Models.Venda", b =>
                {
                    b.HasOne("WebApplication1.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entrega", "Entrega")
                        .WithMany()
                        .HasForeignKey("EntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Entrega");
                });
#pragma warning restore 612, 618
        }
    }
}
